function t(){return t=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var i=arguments[e];for(var s in i)Object.prototype.hasOwnProperty.call(i,s)&&(t[s]=i[s])}return t},t.apply(this,arguments)}class e{constructor(e={},i=null,s=null,a=null){this._gsap=i,this._ScrollTrigger=s,this._SplitText=a,this.defaultOptions={elements:"[data-inview]",duration:1,delay:.1,start:"top 90%",ease:"power4",stagger:.08,animationFrom:{opacity:0,"will-change":"transform",y:20},animationTo:{opacity:1,y:0},screen:"(min-width: 1025px)",autoStart:!0,inviewClass:"is-inview",viewedClass:"has-viewed"},this.options=t({},this.defaultOptions,e),this.triggers=[],this.animatedElementsList=[],this.eventListeners={},this.getOption("autoStart")&&this.init()}register(t,e,i){this._gsap=t,this._ScrollTrigger=e,this._SplitText=i}getOption(t){return this.options[t]}init(){if(null!=this._gsap)if(null!=this._ScrollTrigger){null==this._SplitText&&console.log("SplitText is not registered. data-inview-split is disabled.");try{this._gsap.utils.toArray(this.getOption("elements")).forEach((t,e)=>{let i=[];t.hasAttribute("data-inview-scope")?(this.addScopedElements(t,i),this.addChildElements(t,i),this.addSplitElements(t,i)):i.push({el:t,order:t.dataset.inviewOrder}),this.sortAnimatedElements(i),this.animateElements(t,i,e)})}catch(t){console.error("Error initialising InviewDetection:",t)}}else console.log("ScrollTrigger is not registered. Exiting");else console.log("GSAP is not registered. Exiting")}on(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}emit(t,e){const i=this.eventListeners[t];i&&i.forEach(t=>{t(e)})}start(){this.init()}addScopedElements(t,e){try{t.dataset.inviewScope&&t.querySelectorAll(":scope "+t.dataset.inviewScope).forEach(t=>{const i=parseFloat(t.dataset.inviewOrder);e.push({el:t,order:i}),this.animatedElementsList.push(t)})}catch(t){console.error("Error adding scoped elements:",t)}}addChildElements(t,e){try{t.querySelectorAll(":scope [data-inview-child]").forEach(t=>{const i=parseFloat(t.dataset.inviewOrder);e.push({el:t,order:i}),this.animatedElementsList.push(t)})}catch(t){console.error("Error adding child elements:",t)}}findClosestParentOrderAttr(t){let e=t.parentElement,i=0;for(;e&&i<=5;){if(e.hasAttribute("data-inview-order"))return parseFloat(e.getAttribute("data-inview-order"));e=e.parentElement,i++}if(t.hasAttribute("data-inview-order")){const e=t.getAttribute("data-inview-order");return!isNaN(+e)&&+e}return!1}addSplitElements(t,e){const i=t.querySelectorAll(":scope *:where([data-inview-split])"),s=Array.from(i).filter(t=>t.dataset.inviewSplit);[...Array.from(i).filter(t=>!t.dataset.inviewSplit),...this.getSplitChildren(s)].forEach(t=>{t instanceof NodeList?t.forEach(t=>this.addSplitElement(t,e)):this.addSplitElement(t,e)})}getSplitChildren(t){let e=[];return t.forEach(t=>{e=[...e,...t.querySelectorAll(":scope "+t.dataset.inviewSplit)]}),e}addSplitElement(t,e){if(this._SplitText)try{if(t instanceof Element){let i=this.findClosestParentOrderAttr(t);new this._SplitText(t,{type:"lines",linesClass:"lineChild"}).lines.forEach(t=>{i?(i+=.01,t.dataset.inviewOrder=i.toFixed(2),e.push({el:t,order:i}),this.animatedElementsList.push(t)):(e.push({el:t,order:!1}),this.animatedElementsList.push(t)),t.style.visibility="visible"})}else console.error("splitElement is not a DOM element:",t)}catch(t){console.error("Error splitting element:",t)}}sortAnimatedElements(t){t.sort((t,e)=>{var i,s;return(null!=(i=t.order)?i:1)-(null!=(s=e.order)?s:-1)});for(let e=0;e<t.length;e++)t[e]=t[e].el}animateElements(e,i,s){var a=this;let r=[],n=[];const o=this._gsap.matchMedia(),l=e.dataset.inviewScreen||this.getOption("screen");o.add(l,()=>{let s=this._gsap.timeline({scrollTrigger:{trigger:e,start:e.dataset.inviewStart||this.getOption("start"),invalidateOnRefresh:!0,onEnter:async function(){if(s.play(),s.hasPlayed=!0,e.classList.add(a.getOption("viewedClass")),e.hasAttribute("data-inview-call")){const t=e.getAttribute("data-inview-call");window.dispatchEvent(new CustomEvent(t,{detail:{target:e}}))}a.eventListeners.onEnter&&a.emit("onEnter",e)},onLeave:()=>{e.hasAttribute("data-inview-repeat")&&s.restart().pause(),this.eventListeners.onLeave&&this.emit("onLeave",e)},onEnterBack:async function(){e.hasAttribute("data-inview-repeat")?(s.restart(),s.hasPlayed=!0):s.hasPlayed||(s.play(),s.hasPlayed=!0),a.eventListeners.onEnterBack&&a.emit("onEnterBack",e)},onLeaveBack:()=>{e.hasAttribute("data-inview-repeat")&&s.restart().pause(),this.eventListeners.onLeaveBack&&this.emit("onLeaveBack",e)},markers:!!e.hasAttribute("data-inview-debug"),toggleClass:{targets:e,className:this.getOption("inviewClass")}}});s.hasPlayed=!1;let o=0;i.forEach(i=>{try{let a=this.getOption("animationFrom"),l=this.getOption("animationTo");i.dataset.inviewFrom?a=JSON.parse(i.dataset.inviewFrom):e.dataset.inviewFrom&&(a=JSON.parse(e.dataset.inviewFrom)),i.dataset.inviewTo?l=JSON.parse(i.dataset.inviewTo):e.dataset.inviewTo&&(l=JSON.parse(e.dataset.inviewTo)),r.push(a),n.push(l),this._gsap.set(i,a);let h=e.dataset.inviewStagger||this.getOption("stagger");s.to(i,t({},l,{duration:e.dataset.inviewDuration||this.getOption("duration"),delay:e.dataset.inviewDelay||this.getOption("delay"),ease:e.dataset.inviewEase||this.getOption("ease")}),o),o+=parseFloat(h)}catch(t){console.error(`An error occurred while animating the element: ${t}`)}}),s.pause()}),e.hasAttribute("data-inview-debug")&&this.debugMode(e,i,r,n,s)}debugMode(t,e,i,s,a){console.group(`InviewDetection() debug instance (#${a+1})`),console.log({parent:t,elements:e,screen:this.getOption("screen"),animationFrom:i,animationTo:s,duration:this.getOption("duration"),delay:this.getOption("delay"),start:this.getOption("start"),ease:this.getOption("ease"),stagger:this.getOption("stagger")}),console.groupEnd()}refresh(){this._ScrollTrigger.refresh(),this.eventListeners.refresh&&this.emit("refresh",parent)}stop(){this.triggers.forEach(t=>t.kill()),this._gsap.utils.toArray(this.getOption("elements")).concat(this.animatedElementsList).forEach(t=>{this._gsap.killTweensOf(t)}),this.eventListeners.stop&&this.emit("stop",parent)}restart(){this._gsap.utils.toArray(this.getOption("elements")).forEach(t=>{this._gsap.killTweensOf(t)}),this.init(),this.eventListeners.restart&&this.emit("restart",parent)}}export{e as default};
//# sourceMappingURL=inview-detection.modern.mjs.map
