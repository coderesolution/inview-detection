!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t||self).inviewDetection=e()}(this,function(){function t(){return t=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var i=arguments[e];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(t[n]=i[n])}return t},t.apply(this,arguments)}/*#__PURE__*/
return function(){function e(e,i,n,r){void 0===e&&(e={}),void 0===i&&(i=null),void 0===n&&(n=null),void 0===r&&(r=null),this._gsap=i,this._ScrollTrigger=n,this._SplitText=r,this.defaultOptions={elements:"[data-inview]",duration:1,delay:.1,start:"top 90%",ease:"power4",stagger:.08,animationFrom:{opacity:0,"will-change":"transform",y:20},animationTo:{opacity:1,y:0},screen:"(min-width: 1025px)",autoStart:!0,inviewClass:"is-inview",viewedClass:"has-viewed"},this.options=t({},this.defaultOptions,e),this.triggers=[],this.animatedElementsList=[],this.eventListeners={},this.getOption("autoStart")&&this.init()}var i=e.prototype;return i.register=function(t,e,i){this._gsap=t,this._ScrollTrigger=e,this._SplitText=i},i.getOption=function(t){return this.options[t]},i.init=function(){var t=this;if(null!=this._gsap)if(null!=this._ScrollTrigger){null==this._SplitText&&console.log("SplitText is not registered. data-inview-split is disabled.");try{this._gsap.utils.toArray(this.getOption("elements")).forEach(function(e,i){var n=[];e.hasAttribute("data-inview-scope")?(t.addScopedElements(e,n),t.addChildElements(e,n),t.addSplitElements(e,n)):n.push({el:e,order:e.dataset.inviewOrder}),t.sortAnimatedElements(n),t.animateElements(e,n,i)})}catch(t){console.error("Error initialising InviewDetection:",t)}}else console.log("ScrollTrigger is not registered. Exiting");else console.log("GSAP is not registered. Exiting")},i.on=function(t,e){this.eventListeners[t]||(this.eventListeners[t]=[]),this.eventListeners[t].push(e)},i.emit=function(t,e){var i=this.eventListeners[t];i&&i.forEach(function(t){t(e)})},i.start=function(){this.init()},i.addScopedElements=function(t,e){var i=this;try{t.dataset.inviewScope&&t.querySelectorAll(":scope "+t.dataset.inviewScope).forEach(function(t){var n=parseFloat(t.dataset.inviewOrder);e.push({el:t,order:n}),i.animatedElementsList.push(t)})}catch(t){console.error("Error adding scoped elements:",t)}},i.addChildElements=function(t,e){var i=this;try{t.querySelectorAll(":scope [data-inview-child]").forEach(function(t){var n=parseFloat(t.dataset.inviewOrder);e.push({el:t,order:n}),i.animatedElementsList.push(t)})}catch(t){console.error("Error adding child elements:",t)}},i.findClosestParentOrderAttr=function(t){for(var e=t.parentElement,i=0;e&&i<=5;){if(e.hasAttribute("data-inview-order"))return parseFloat(e.getAttribute("data-inview-order"));e=e.parentElement,i++}if(t.hasAttribute("data-inview-order")){var n=t.getAttribute("data-inview-order");return!isNaN(+n)&&+n}return!1},i.addSplitElements=function(t,e){var i=this,n=t.querySelectorAll(":scope *:where([data-inview-split])"),r=Array.from(n).filter(function(t){return t.dataset.inviewSplit}),a=Array.from(n).filter(function(t){return!t.dataset.inviewSplit});[].concat(a,this.getSplitChildren(r)).forEach(function(t){t instanceof NodeList?t.forEach(function(t){return i.addSplitElement(t,e)}):i.addSplitElement(t,e)})},i.getSplitChildren=function(t){var e=[];return t.forEach(function(t){e=[].concat(e,t.querySelectorAll(":scope "+t.dataset.inviewSplit))}),e},i.addSplitElement=function(t,e){var i=this;if(this._SplitText)try{if(t instanceof Element){var n=this.findClosestParentOrderAttr(t);new this._SplitText(t,{type:"lines",linesClass:"lineChild"}).lines.forEach(function(t){n?(t.dataset.inviewOrder=(n+=.01).toFixed(2),e.push({el:t,order:n}),i.animatedElementsList.push(t)):(e.push({el:t,order:!1}),i.animatedElementsList.push(t)),t.style.visibility="visible"})}else console.error("splitElement is not a DOM element:",t)}catch(t){console.error("Error splitting element:",t)}},i.sortAnimatedElements=function(t){t.sort(function(t,e){var i,n;return(null!=(i=t.order)?i:1)-(null!=(n=e.order)?n:-1)});for(var e=0;e<t.length;e++)t[e]=t[e].el},i.animateElements=function(e,i,n){var r=this,a=[],s=[],o=this._gsap.matchMedia(),l=e.dataset.inviewScreen||this.getOption("screen");o.add(l,function(){var n=r._gsap.timeline({scrollTrigger:{trigger:e,start:e.dataset.inviewStart||r.getOption("start"),invalidateOnRefresh:!0,onEnter:function(){try{if(n.play(),n.hasPlayed=!0,e.classList.add(r.getOption("viewedClass")),e.hasAttribute("data-inview-call")){var t=e.getAttribute("data-inview-call");window.dispatchEvent(new CustomEvent(t,{detail:{target:e}}))}return r.eventListeners.onEnter&&r.emit("onEnter",e),Promise.resolve()}catch(t){return Promise.reject(t)}},onLeave:function(){e.hasAttribute("data-inview-repeat")&&n.restart().pause(),r.eventListeners.onLeave&&r.emit("onLeave",e)},onEnterBack:function(){try{return e.hasAttribute("data-inview-repeat")?(n.restart(),n.hasPlayed=!0):n.hasPlayed||(n.play(),n.hasPlayed=!0),r.eventListeners.onEnterBack&&r.emit("onEnterBack",e),Promise.resolve()}catch(t){return Promise.reject(t)}},onLeaveBack:function(){e.hasAttribute("data-inview-repeat")&&n.restart().pause(),r.eventListeners.onLeaveBack&&r.emit("onLeaveBack",e)},markers:!!e.hasAttribute("data-inview-debug"),toggleClass:{targets:e,className:r.getOption("inviewClass")}}});n.hasPlayed=!1;var o=0;i.forEach(function(i){try{var l=r.getOption("animationFrom"),d=r.getOption("animationTo");i.dataset.inviewFrom?l=JSON.parse(i.dataset.inviewFrom):e.dataset.inviewFrom&&(l=JSON.parse(e.dataset.inviewFrom)),i.dataset.inviewTo?d=JSON.parse(i.dataset.inviewTo):e.dataset.inviewTo&&(d=JSON.parse(e.dataset.inviewTo)),a.push(l),s.push(d),r._gsap.set(i,l);var c=e.dataset.inviewStagger||r.getOption("stagger");n.to(i,t({},d,{duration:e.dataset.inviewDuration||r.getOption("duration"),delay:e.dataset.inviewDelay||r.getOption("delay"),ease:e.dataset.inviewEase||r.getOption("ease")}),o),o+=parseFloat(c)}catch(t){console.error("An error occurred while animating the element: "+t)}}),n.pause()}),e.hasAttribute("data-inview-debug")&&this.debugMode(e,i,a,s,n)},i.debugMode=function(t,e,i,n,r){console.group("InviewDetection() debug instance (#"+(r+1)+")"),console.log({parent:t,elements:e,screen:this.getOption("screen"),animationFrom:i,animationTo:n,duration:this.getOption("duration"),delay:this.getOption("delay"),start:this.getOption("start"),ease:this.getOption("ease"),stagger:this.getOption("stagger")}),console.groupEnd()},i.refresh=function(){this._ScrollTrigger.refresh(),this.eventListeners.refresh&&this.emit("refresh",parent)},i.stop=function(){var t=this;this.triggers.forEach(function(t){return t.kill()}),this._gsap.utils.toArray(this.getOption("elements")).concat(this.animatedElementsList).forEach(function(e){t._gsap.killTweensOf(e)}),this.eventListeners.stop&&this.emit("stop",parent)},i.restart=function(){var t=this;this._gsap.utils.toArray(this.getOption("elements")).forEach(function(e){t._gsap.killTweensOf(e)}),this.init(),this.eventListeners.restart&&this.emit("restart",parent)},e}()});
//# sourceMappingURL=inview-detection.umd.js.map
